<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<!-- 定义切面对象 -->
	<bean id="security" class="com.hhm.aop_04_after.Security"></bean>
	<!-- 定义目标对象（真实对象、被代理对象） -->
	<bean id="userDao" class="com.hhm.aop_04_after.UserDaoImpl"></bean>

	<aop:config>
		<!-- 注入切面 -->
		<aop:aspect id="myAspect" ref="security">

			<!-- 定义切入点 -->
			<!-- 说明： 第一个*号表示任意返回类型，第二个*号表示任意的以add开头的方法。 这句话的总意思是说：当调用com.hhm.aop_01_before.UserDaoImpl该包下的任意以add开头的方法时， 
				通过 <aop:aspect id="myAspect" ref="security">的ref属性实例化一个Security对象，然后 通过 <aop:pointcut 
				id="myPointcut"中的myPointcut找到何时调用的方法，在此文件中有定义 为：<aop:before method="checkSecurity" 
				pointcut-ref="myPointcut" />， 意思是：在进入主要业务逻辑方法前，调用Security对象的checkSecurity方法。 
			-->
			<aop:pointcut id="myPointcut"
				expression=" execution(* com.hhm.aop_04_after.UserDaoImpl.add*(..) )" />

			<!-- 三何：何时：after-throwing,何能：method 何处：pointcut-ref 如果通知出现异常，阻止进入切入点 -->
			<!-- 何时，何方法，什么异常，注意异常的名称必须要与声明的一致 -->
			
		    <aop:after method="checkSecurity" pointcut-ref="myPointcut" />
		</aop:aspect>

	</aop:config>



</beans>